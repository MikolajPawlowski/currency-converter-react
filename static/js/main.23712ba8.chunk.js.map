{"version":3,"sources":["doge.jpg","GlobalStyle.js","App/styled.js","App/currencies.js","App/Form/Result/styled.js","App/Form/Result/index.js","App/Form/Clock/styled.js","App/Form/Clock/index.js","App/Form/Clock/useCurrentDate.js","App/Form/styled.js","App/Form/index.js","App/index.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","background","Container","styled","div","currencies","short","name","rate","StyledResult","p","Result","result","currency","undefined","sourceAmount","toFixed","targetAmount","StyledClock","Clock","dateString","useState","Date","currentDate","setCurrentDate","useEffect","setInterval","clearInterval","useCurrentDate","toLocaleDateString","weekday","day","month","year","hour","minute","second","StyledForm","form","Header","h1","Fieldset","fieldset","Legend","legend","Field","input","Select","select","Label","label","LabelText","span","Button","button","Paragraph","Form","calculateResult","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","required","type","min","step","placeholder","map","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23712ba8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/doge.7df6bdf2.jpg\";","import { createGlobalStyle } from \"styled-components\";\nimport background from \"./doge.jpg\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n\n  *, ::after, ::before {\n    box-sizing: inherit;\n  }\n\n  #root {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 100vh;\n    font-family: \"Saira\", sans-serif;\n    background-image: url(\"${background}\");\n    background-size: cover;\n    background-position: center;\n  }\n`;","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n    flex-basis: 800px;\r\n    margin: 20px;\r\n    padding: 30px;\r\n    border-radius: 15px;\r\n    box-shadow: -2px -1px 2px 0px beige;\r\n`;","export const currencies = [\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar amerykański\",\r\n        rate: 3.7386,\r\n    },\r\n    {\r\n        short: \"BTC\",\r\n        name: \"Bitcoin\",\r\n        rate: 150655.93,\r\n    },\r\n    {\r\n        short: \"DOGE\",\r\n        name: \"Dogecoin\",\r\n        rate: 1.2071,\r\n    },\r\n];","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p`\r\n    color:beige;\r\n    text-align: center;\r\n    font-size: 20px;\r\n`;","import { StyledResult } from \"./styled.js\";\r\n\r\nexport const Result = ({ result, currency }) => (\r\n    <StyledResult>\r\n        {result !== undefined && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.targetAmount.toFixed(currency === \"Bitcoin\" ? 2 : 6)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </StyledResult>\r\n);","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.p`\r\n    font-family: monospace;\r\n    font-weight: lighter;\r\n    text-align: right;\r\n    font-size: 15px;\r\n    color: beige;\r\n`;","import { StyledClock } from \"./styled.js\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nexport const Clock = () => {\r\n    const currentDate = useCurrentDate();\r\n    const dateString = currentDate.toLocaleDateString(\r\n        undefined,\r\n        {\r\n            weekday: \"long\",\r\n            day: \"numeric\",\r\n            month: \"long\",\r\n            year: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            second: \"numeric\",\r\n        }\r\n    );\r\n\r\n    return (\r\n        <StyledClock>\r\n            Dziś jest {dateString}\r\n        </StyledClock>\r\n    )\r\n};","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setCurrentDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(setCurrentDate);\r\n        };\r\n    }, []);\r\n\r\n    return currentDate;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n    text-align: center;\r\n    color: rgb(223, 206, 206);\r\n    text-shadow: 2px 2px 2px rgb(80, 79, 79);\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    background-color: rgba(0, 0, 0, 0.425);\r\n    border: 2px solid #ccc;\r\n    padding: 10px;\r\n    border-radius: 40px;\r\n    margin: 20px;\r\n    box-shadow: -1px 1px 2px 0px beige;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    background-color: rgba(0, 128, 128, 0.507);\r\n    padding: 10px;\r\n    border: 2px solid beige;\r\n    border-radius: 30px;\r\n    font-size: 20px;\r\n    box-shadow: -1px 1px 2px 0px beige;\r\n    color: beige;\r\n`;\r\n\r\nexport const Field = styled.input`\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    max-width: 300px;\r\n    width: 100%;\r\n    border-radius: 40px;\r\n\r\n    &:required {\r\n        border-color: 2px solid black;\r\n    }\r\n\r\n    &:invalid {\r\n        background-color: hsl(9, 100%, 90%);\r\n    }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    max-width: 300px;\r\n    width: 100%;\r\n    border-radius: 40px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    margin: 10px 5px;\r\n    text-align: left;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    background-color: rgba(0, 128, 128, 0.507);\r\n    color: beige;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    margin: 10px 0;\r\n    font-size: 26px;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 33%);\r\n    }\r\n\r\n    &:active {\r\n        background-color: hsl(180, 100%, 39%);\r\n    }\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n    color: beige;\r\n`;","import { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport { Result } from \"./Result\";\r\nimport { Clock } from \"./Clock\";\r\nimport { StyledForm, Header, Fieldset, Legend, Field, Select, LabelText, Button, Paragraph, Label } from \"./styled.js\";\r\n\r\nexport const Form = ({ calculateResult, result }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <StyledForm onSubmit={onSubmit}>\r\n            <Header>\r\n                Konwerter kursów walutowych\r\n            </Header>\r\n            <Clock />\r\n            <Fieldset>\r\n                <Legend>\r\n                    Konwerter walut\r\n                </Legend>\r\n                <Paragraph>\r\n                    <strong>\r\n                        Pola oznaczone * muszą być wypełnione,&nbsp;\r\n                    </strong>\r\n                    kursy z dnia 14.06.2021\r\n                </Paragraph>\r\n                <Paragraph>\r\n                    <Label>\r\n                        <LabelText>\r\n                            Kwota w PLN*:\r\n                        </LabelText>\r\n                        <Field\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            required type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"0.01\"\r\n                            placeholder=\"Podaj wymaganą kwotę\"\r\n                        />\r\n                    </Label>\r\n                </Paragraph>\r\n                <Paragraph>\r\n                    <Label>\r\n                        <LabelText>\r\n                            Konwertuję walutę na:\r\n                        </LabelText>\r\n                        <Select\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.short}\r\n                                    value={currency.short}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))}\r\n                        </Select>\r\n                    </Label>\r\n                </Paragraph>\r\n                <Paragraph>\r\n                    <Button>Hit me</Button>\r\n                </Paragraph>\r\n\r\n                <Result result={result} />\r\n            </Fieldset>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;","import { useState } from \"react\";\r\nimport { Container } from \"./styled\";\r\nimport { Form } from \"./Form\";\r\nimport { currencies } from \"./currencies\";\r\n\r\nfunction App() {\r\n\r\n    const [result, setResult] = useState();\r\n\r\n    const calculateResult = (currency, amount) => {\r\n        const rate = currencies\r\n            .find(({ short }) => short === currency)\r\n            .rate;\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount / rate,\r\n            currency,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form\r\n                result={result}\r\n                calculateResult={calculateResult}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle.js';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}