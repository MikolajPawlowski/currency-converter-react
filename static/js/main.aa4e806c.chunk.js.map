{"version":3,"sources":["App/currencies.js","App/Form/Result/index.js","App/Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["currencies","short","name","rate","Result","result","className","undefined","sourceAmount","toFixed","targetAmount","currency","Form","calculateResult","useState","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","required","type","min","step","placeholder","map","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAaA,G,MAAa,CACtB,CACIC,MAAO,MACPC,KAAM,yBACNC,KAAM,QAEV,CACIF,MAAO,MACPC,KAAM,UACNC,KAAM,WAEV,CACIF,MAAO,OACPC,KAAM,WACNC,KAAM,U,eCXDC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAClB,mBAAGC,UAAU,SAAb,cACgBC,IAAXF,GACG,qCACKA,EAAOG,aAAaC,QAAQ,GADjC,eAEK,IACD,mCACKJ,EAAOK,aAAaD,QAAQ,GADjC,OAC2CJ,EAAOM,kBCLrDC,G,MAAO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,gBAAiBR,EAAa,EAAbA,OACpC,EAAgCS,mBAASd,EAAW,GAAGC,OAAvD,mBAAOU,EAAP,KAAiBI,EAAjB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAOA,OACI,uBAAMX,UAAU,OAAOY,SANV,SAACC,GACdA,EAAMC,iBACNP,EAAgBF,EAAUK,IAI1B,UACI,oBAAIV,UAAU,eAAd,4CAGA,2BAAUA,UAAU,iBAApB,UACI,wBAAQA,UAAU,eAAlB,6BAGA,oBAAGA,UAAU,kBAAb,UACI,+FADJ,6BAMA,mBAAGA,UAAU,kBAAb,SACI,wBAAOA,UAAU,cAAjB,UACI,sBAAMA,UAAU,kBAAhB,2BAGA,uBACIe,MAAOL,EACPM,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAUM,EAAOF,QAC3Cf,UAAU,cACVkB,UAAQ,EAACC,KAAK,SACdC,IAAI,IACJC,KAAK,OACLC,YAAY,wCAIxB,mBAAGtB,UAAU,kBAAb,SACI,wBAAOA,UAAU,cAAjB,UACI,sBAAMA,UAAU,kBAAhB,6CAGA,wBACIA,UAAU,cACVe,MAAOV,EACPW,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAYQ,EAAOF,QAHjD,SAKKrB,EAAW6B,KAAK,SAAAlB,GAAQ,OACrB,wBAEIU,MAAOV,EAASV,MAFpB,SAIKU,EAAST,MAHLS,EAASV,iBASlC,4BACI,wBAAQK,UAAU,eAAlB,sBAGJ,cAAC,EAAD,CAAQD,OAAQA,YCvCjByB,MA1Bf,WAEI,MAA4BhB,qBAA5B,mBAAOT,EAAP,KAAe0B,EAAf,KAcA,OACI,qBAAKzB,UAAU,MAAf,SACI,cAAC,EAAD,CACID,OAAQA,EACRQ,gBAhBY,SAACF,EAAUK,GAC/B,IAAMb,EAAOH,EACRgC,MAAK,qBAAG/B,QAAsBU,KAC9BR,KAEL4B,EAAU,CACNvB,cAAeQ,EACfN,aAAcM,EAASb,EACvBQ,mBCLGsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa4e806c.chunk.js","sourcesContent":["export const currencies = [\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar amerykański\",\r\n        rate: 3.7386,\r\n    },\r\n    {\r\n        short: \"BTC\",\r\n        name: \"Bitcoin\",\r\n        rate: 150655.93,\r\n    },\r\n    {\r\n        short: \"DOGE\",\r\n        name: \"Dogecoin\",\r\n        rate: 1.2071,\r\n    },\r\n];","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport const Result = ({ result }) => (\r\n    <p className=\"result\">\r\n        {result !== undefined && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </p>\r\n);","import { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport { Result } from \"./Result\";\r\nimport \"./style.css\";\r\n\r\nexport const Form = ({ calculateResult, result }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n            <h1 className=\"form__header\">\r\n                Konwerter kursów walutowych\r\n            </h1>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">\r\n                    Konwerter walut\r\n                </legend>\r\n                <p className=\"form__paragraph\">\r\n                    <strong>\r\n                        Pola oznaczone * muszą być wypełnione,&nbsp;\r\n                    </strong>\r\n                    kursy z dnia 14.06.2021\r\n                </p>\r\n                <p className=\"form__paragraph\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelText\">\r\n                            Kwota w PLN*:\r\n                        </span>\r\n                        <input\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            className=\"form__field\"\r\n                            required type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"0.01\"\r\n                            placeholder=\"Podaj wymaganą kwotę\"\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p className=\"form__paragraph\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelText\">\r\n                            Konwertuję walutę na:\r\n                        </span>\r\n                        <select\r\n                            className=\"form__field\"\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.short}\r\n                                    value={currency.short}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))}\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <button className=\"form__button\">Hit me</button>\r\n                </p>\r\n\r\n                <Result result={result} />\r\n            </fieldset>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import { useState } from \"react\";\r\nimport \"./App/App.css\";\r\nimport { Form } from \"./App/Form\";\r\nimport { currencies } from \"./App/currencies\";\r\n\r\nfunction App() {\r\n\r\n    const [result, setResult] = useState();\r\n\r\n    const calculateResult = (currency, amount) => {\r\n        const rate = currencies\r\n            .find(({ short }) => short === currency)\r\n            .rate;\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount / rate,\r\n            currency,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Form\r\n                result={result}\r\n                calculateResult={calculateResult}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}